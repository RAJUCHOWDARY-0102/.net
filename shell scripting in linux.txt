Else if statement with examples | Shell scripting

#!/bin/bash

read -p "Enter numeric value: " EnteredValue

if [ $EnteredValue -gt  90]
then
    echo "Entered Value is greater than 90"
fi

=======================================
#!/bin/bash

read -p "Enter numeric value: " EnteredValue

if [ $EnteredValue -gt 90 ]
then
    echo "Entered Value is greater than 90"
else
    echo "Entered Value is less than 90"
fi
exit

=========================================
#!/bin/bash

read -p "Enter numeric value: " EnteredValue

if [ $EnteredValue -ge 90 ]
then
    echo "Entered Value is greater than 90"

elif [ $EnteredValue -ge 70 ]
then
    echo "Entered Value is greater than 70"

else 
    echo "Enterted Value is less 70"
fi

-----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------


===>>sed command with examples | Linux in Telugu

It used to replacing,searching,delete,insert data
& also is mostly used command in scripting

why late lets know about sed command.





systax 
 sed OPTIONS... [SCRIPT] [INPUTFILE...] 

Example:1

How to replace word with another word name.

cat nagios.txt | sed 's/Nagios/nagios/'

here,we replaced Nagios with nagios 

Example:2
How to replace word with another word name using global variable.

cat nagios.txt | sed 's/Nagios/nagios/g'

here,we replaced Nagios with nagios all places
Example:3
How to replace word with another word name nth line.

cat nagios.txt | sed 's/Nagios/nagios/'2g'

here,we replaced Nagios with nagios up to second line
Example:4
How to replace word with another word name in specific line.

cat nagios.txt | sed '2 s/Nagios/nagios/'

here,we replaced Nagios with nagios in second line only
----------------------------------------

How to delete lines from a particular file.

1.To Delete a particular line say n in this example
Syntax:
$ sed 'nd' filename.txt
Example:
$ sed '2d' filename.txt

here,we are deleting 2nd line.

2. To Delete a last line

Syntax:
$ sed '$d' filename.txt

here,we are deleting last line.
3. To Delete line from range x to y

Syntax:
$ sed 'x,yd' filename.txt
Example:
$ sed '3,6d' filename.txt

here, we are deleting between 3rd and 6th line. 

4. To Delete from nth to last line

Syntax:
$ sed 'nth,$d' filename.txt
Example:
$ sed '12,$d' filename.txt

5. To Delete pattern matching line

Syntax:
$ sed '/pattern/d' filename.txt
Example:
$ sed '/abc/d' filename.txt

here,we are deleting abc word.
---------------------------------------

How to add pdf at the end of the file

cat numbers.txt | xargs -r |sed 's/ /.pdf /g'

--------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------



===>>> Awk command with simple examples
Now, we are going to learn very interesting and Most important  in Linux
Why late lets know about Awk command,one of the mostly used command in scripting. awk command used to manipulate data | using this AWK command we can generate specified reports as per our requirement.




Syntax :

awk ‘BEGIN {start_action} {action} END {stop_action}’ filename

let me explain about awk command with simple examples

Example 1:
How to print entire  data of the file

cat filename | awk '{print}'
cat filename | awk '{print$0}'

both "awk '{print}' and awk '{print$0}' " used to print entire date

Example 2:
How to print  very first column

cat filename|  awk '{print$1}'

awk '{print$1}' used to print very first column  
awk '{print$1}' used to print second column  

Example 3:
How to print pattern Matching Technique in Awk.

free -m | awk '{/Mem/print}'

here, we are matching Mem using awk '{/Mem/print}'

Example 4:

How to Print multiple column at the time.

free -h | awk '/Mem/{print$1,$2,$4}'

here, we are print 1st,2nd,3rd columns at the time.

Example 5:

How to Print line number using variable NR

free -h | awk '{print NR,$0}'

Example 6:
How to print specific lines

free -h | awk 'NR == 2,NR == 9{print NR,$0}'

Here,we are print lines between 2 & 9.

Thanks you.  

Real time
ll -lrth | awk '{print$9}'

Filter data manipulation
cat listofusers.txt | awk '$4~/M/'


cat listofusers.txt | awk '{printNF}'
cat listofusers.txt | awk '{print (NF-1)}' //second last coloum

---------------------------------------------------------
-----------------------------------------------------------


====>>How to use Crontab Command
Crontab:It is used to Schedule jobs.
Crontab –l: -l is used to List out the job for current user.
Crontab –e:-e is used to edit schedule jobs for current user. 
Crontab –r:-r is used to remove all job for current user.
Note : Don't try this command until unless remove jobs.
Crontab –e –u <Username> : It is used to edit jobs for particular user. 





Cat /etc/crontab : It used to check cron job info.

*/1 * * *  * /root/cpu.sh 

*      * * * *
Minute     Hour Day  Month Day of week  

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  . ------- month (1 - 12) OR Jan, feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR 
# |  |  |  |  |
# *  *  *  *  * 
Be practice below examples which are very useful in real time environment.

*/1 – Every one minute 
*/1-   Every one hour
1-31 Day of the month
1-12(Jan to Dec)
0-6(Sunday to Monday) 0Sunday, 1Monday, 2Thesday

Every day 7-18
* 7-18 * * *  /root/cpu.sh 
Every month 15,16 dates
* * 15,16 * *  /root/cpu.sh 
6 Month one time only
* * * 6 *  /root/cpu.sh 
Every Tues day
* * * * 2  /root/cpu.sh 
---------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------



====>> AND and OR Operators in Bash scripting
Hey guys, here we will discuss how to use AND and OR Operator in Bash Scripting, 
AND operator
we can mention AND operator "-a"  "&"
simple example for AND Operator.

#!/bin/bash
echo "Enter SSC marks: " 
read SSC
echo "Enter Inter Marks: "  
read Inter

if [ $SSC -ge 70  -a  $Inter -gt 60 ]
#if [ $SSC -ge 70 ] & [ $Inter -ge 60 ]

then
        echo "Candidate Eligible"
else
echo "Candidate Not Eligible"

fi
OR Operator
we can mention AND operator "-o"  "||"
simple example for OR Operator.

#!/bin/bash
echo "Enter SSC Percentage: " 
read SSC
echo "Enter Inter Percentage: "  
read Inter

#if [ $SSC -ge 70  -o  $Inter -gt 60 ]
if [ $SSC -ge 70 ] || [ $Inter -ge 60 ]
then
        echo "Candidate Eligible"
else
 echo "Candidate Not Eligible"
fi
---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------


===>>>Grep Command with Regular Expression
Grep is used to search in content as per our requirement using different options, using this command we can save our time why late lets know about Grep command.

Grep stands for Global Regular Expression Parser,

How to check grep command available on our machine ?
  grep -V
How to install grep if not available in out machine ?
   sudo yum install grep

Syntax for Grep command
grep < > filename
cat filename | grep <string>

i have raja.txt with below content
ABC
abc
bcd
cde
123
234
....etc

1.How to search matched string in using grep command
cat raja.txt | grep cde
output
cde

2.How to search string without matched files
cat raja.txt | grep -v cde
ouput
ABC
abc
bcd
123
234

3.How to search string with case sensitive
cat raja.txt | grep -i abc
output
ABC
abc

4.How to print string with below n lines
cat raja.txt | grep  abc -A 2
output
abc
bcd
123

4.How to print string with above n lines
cat raja.txt | grep  123-B 2
output
abc
bcd
123

5.How to print below n line above n line with string
cat raja.txt | grep  abc -C 1
output
ABC
abc
bcd

6.How find count of matching strings
cat raja.txt | grep -c "abc"

7.Not Matched
cat a2z.txt | grep -v "Wood"

8.Match all lines that do not contain particular string
cat raja.txt | grep | “[^123]”

9.Match all lines that end with ‘done’. E.g: “well done”
cat raja.txt | grep | “done$”

10.matched content with number
cat a2z.txt | grep -n "Wood"

11.How find all .PDF extension files
grep -l *.pdf
----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------

===>>Read user input in Bash shell scripting
 Read command is of the most used command in Bash shell scripting, it useful for read the data from input devices.

simple example for read user input data from below.

#!/bin/bash
echo "Enter name : "
read name
echo "entered name : $name"
echo "Enter name : "
read name
echo "Enter place : "
read place
echo "Enter phone : "
read phone
echo "entered name : $name"
echo "entered name : $place"
echo "entered name : $phone"

here,when we run this script, it will ask for "Enter Name:" after entered name, it stores in $name here echo is used to print output like "Entered name is 7hills".
-------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------

===>>Variables in Bash shell scripting
What is variable ?
          Every variable contains meta data either is system defined or user defined.
      In every programming language variable play's important role,in Linux there are two types of variables System defined variable and User defined variable.


System defined variable:
         It defined by system,means every OS have some default variables called  system variables.
Example:
$PATH
$date
output
Sun May 12 11:56:34 IST 2019


User defined variable:
        It defined by user,means user need to create,define variable.
Example:
cpu=$( top -b -n1 | grep "Cpu(s)" | awk '{print $2 }'  | cut -d'.' -f1 )
here,we are taking CPU usage 
---------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------


====>> Bash Shell Conditional Expressions
The mostly used bash shell scripting conditional expressions given below, its very useful for who want learn scripting or programming languages. I hope you it useful for you. please fallow my youtube channel for interesting linux or scripting updates.

-eq - is equal to - if [ "$a" -eq "$b" ]
-ne - is not equal to - if [ "$a" -ne "$b" ]
-gt - is greater than - if [ "$a" -gt "$b" ]
-ge - is greater than or equal to - if [ "$a" -ge "$b" ]
-lt - is less than - if [ "$a" -lt "$b" ]
-le - is less than or equal to - if [ "$a" -le "$b" ]
< - is less than - (("$a" < "$b"))
<= - is less than or equal to - (("$a" <= "$b"))
> - is greater than - (("$a" > "$b"))
>= - is greater than or equal to - (("$a" >= "$b"))
#!/bin/bash
#If statemet
#Syntax :
if [ condition ]
then
echo " Condition true"
else
echo " Condition false"
fi
==============================
Example
#! /bin/bash
#1).a=b condition
a=10
b=30
if [ $a == $b ]
then
echo " a is equal to b"
else
echo " a is not equal to b"
fi
==============================
Example
#!/bin/bash
#2).a Greaterthan or eqal b condition
echo "Enter a Value: "
read a
echo "Enter a Value: "
read b
if [ $a -eq $b ]
then
echo " a is greaterthan to b"
else
echo " a is lessthan to b"
fi
================================
#!/bin/bash
#3).a lessthan or eqal b condition
a=10
b=30
if [ $a -el $b ]
then
echo " a is lessthan to b"
else
echo " a is greaterthan to b"
fi
==================================
##!/bin/bash
#Purpose: Find biggest Number among 4 digits
echo -e "Please Enter a Value: \c"
read -r a
echo -e "Please Enter b Value: \c"
read -r b
echo -e "Please Enter c Value: \c"
read -r c
echo -e "Please Enter d Value: \c"
read -r d
if [ $a -gt $b -a $a -gt $c -a $a -gt $d ]; then
echo "$a a is big"
elif [ $b -gt $c -a $b -gt $d ]; then
echo "$b b is big"
elif [ $c -gt $d ]; then
echo "$c c is big"
else
echo "$d d is big"
fi
# END #
========================================
Real time example - CPU Utilization
#!/bin/bash
#Script for CPU Utlization
top
read %cpu
if [ condition ]
then
echo " Condition true"
else
echo " Condition false"
fi
x
x
x
